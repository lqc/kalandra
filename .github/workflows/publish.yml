name: publish
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  release-build:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - name: Install poetry
        uses: abatilo/actions-poetry@v3

      - name: Check if tag matches the version
        if: github.event_name == 'push'
        run: |
            VERSION_IN_CODE=$(poetry version --short)
            if [ "v$VERSION_IN_CODE" != "$GITHUB_REF_NAME" ]; then
                echo "Tag does not match the version in pyproject.toml"
                exit 1
            fi

      - name: Override version to a snapshot version
        if: github.event_name == 'workflow_dispatch'
        run: |
            VERSION_IN_CODE=$(poetry version --short)
            poetry version "$VERSION_IN_CODE.dev${GITHUB_RUN_NUMBER}"

      - name: Build distributions
        run: poetry build

      - name: Upload release distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Authenticate to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u lqc --password-stdin

      - name: Build OCI image
        shell: bash
        run: |
          IMAGE_TAG=$(poetry version --short)
          docker buildx build \
            --output=type=registry --tag ghcr.io/lqc/kalandra:${IMAGE_TAG} \
            .

  pypi-publish:
    runs-on: ubuntu-24.04-arm
    needs:
      - release-build
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@v1.10.3
        with:
            print-hash: true
            attestations: true
